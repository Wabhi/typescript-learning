//what is webpack ?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
it is bundling tool and you could say it's orchestration tool
it's a tool that helps us to reduce the amount of http requests by bundling code together.
so that we can write the code split up across multiple files. but then webpack tool takes all these files
and bundles them together.

//normal setup
//1.multiple .ts files and import (http requests)
//2.unoptimized code 

//how to install the webpack and third party libraries ?

Adjust Webpack Config
In the next lecture, we'll add webpack-dev-server - a tool we use for spinning up a local development server that serves our website.

When using the latest Webpack version, you must edit the webpack.config.js file slightly.

1) Add a devServer option

devServer: {
  static: [
    {
      directory: path.join(__dirname),
    },
  ],
},
2) Set output.publicPath to '/dist/'

output: {
  filename: 'bundle.js',
  path: path.resolve(__dirname, 'dist'),
  publicPath: '/dist/'
},
(we add publicPath in the next lecture - make sure you set it to '/dist/', NOT to just 'dist'!)

After the next lecture, the finished, updated webpack.config.js file should look like this:

const path = require('path');
 
module.exports = {
  mode: 'development',
  entry: './src/app.ts',
  devServer: {
    static: [
      {
        directory: path.join(__dirname),
      },
    ],
  },
  output: {
    filename: 'bundle.js',
    path: path.resolve(__dirname, 'dist'),
    publicPath: '/dist/',
  },
  module: {
    rules: [
      {
        test: /\.tsx?$/,
        use: 'ts-loader',
        exclude: /node_modules/,
      },
    ],
  },
  resolve: {
    extensions: ['.ts', '.js'],
  },
};